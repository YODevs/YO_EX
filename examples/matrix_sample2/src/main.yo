#[app::classname("myapp")]
#[app::wait(true)]

include 'ystdio'
include 'yolib'


public static let index : i32 = 1
public static let matrix : yolib.matrix

func main()
{
  matrix := init yolib.matrix(3,3)
  matrix::set_zero_matrix()
  matrix::set_item(0,0,1.1)
  matrix::set_item(1,0,2.2)
  matrix::set_item(2,0,3.3)
  matrix::set_item(0,1,0)
  matrix::set_item(1,1,5.5)
  matrix::set_item(2,1,6.6)
  matrix::set_item(0,2,0)
  matrix::set_item(1,2,0)
  matrix::set_item(2,2,9.9)
  print_matrix("Upper Triangular",matrix)
  matrix::clear_matrix()
  matrix::set_zero_matrix()
  matrix::set_item(0,0,1.1)
  matrix::set_item(1,0,0)
  matrix::set_item(2,0,0)
  matrix::set_item(0,1,4.4)
  matrix::set_item(1,1,5.5)
  matrix::set_item(2,1,0)
  matrix::set_item(0,2,7.7)
  matrix::set_item(1,2,8.8)
  matrix::set_item(2,2,9.9)
  print_matrix("Lower Triangular",matrix)
  sum(matrix,matrix)
  sub(matrix,matrix)
}

func sum(matrix1:yolib.matrix , matrix2:yolib.matrix) : yolib.matrix
{
  let result : yolib.matrix = matrix1::add(matrix2)
  print_matrix("Matrix1 + Matrix2",result)
}

func sub(matrix1:yolib.matrix , matrix2:yolib.matrix) : yolib.matrix
{
  let result : yolib.matrix = matrix1::sub(matrix2)
  print_matrix("Matrix1 - Matrix2",result)
}

func print_matrix(title : str ,matrix : yolib.matrix)
{
  let matrixframe : str = matrix::get_matrix()
  io::println("#{index}-#{title} #nl#{matrixframe}")
  io::newline()
  index += 1
}
